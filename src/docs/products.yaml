paths:
  /api/products:
    get:
      summary: "Obtener lista de productos"
      description: >
        Obtiene la lista de todos los productos disponibles.
      tags:
        - Productos
      responses:
        200:
          description: "Lista de productos obtenida desde Mongo DB."
          content:
            application/json:
              example: |
                {"title": "Ciruela",
                "description": "Soy una ciruela",
                "price": 17,
                "thumbnails": [
                "ciruela_img"
                ],
                "code": 6,
                "stock": 3,
                "category": "Verduras",
                "status": true,
                "id": "3d9f3e3e-52f9-44cb-bd7a-4848316fe6a1"}
                
    post:
      summary: "Crear un nuevo producto"
      description: "Crea un nuevo producto en la base de datos."
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        201:
          description: "Producto creado exitosamente."
          content:
            application/json:
              example: |
                {
                  "id": 3,
                  "name": "Producto 3",
                  "category": "Categoría 1"
                }
        400:
          description: "Datos de producto no válidos."

  /api/products/{id}:
    get:
      summary: "Obtener un producto por ID"
      description: "Obtiene un producto específico por su ID."
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          description: "ID del producto a obtener"
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Producto obtenido correctamente."
          content:
            application/json:
              example: |
                {
                  "id": 1,
                  "name": "Producto 1",
                  "category": "Categoría 1"
                }
        404:
          description: "Producto no encontrado."

    put:
      summary: "Actualizar un producto por ID"
      description: "Actualiza un producto específico por su ID."
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          description: "ID del producto a actualizar"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: "Producto actualizado correctamente."
        400:
          description: "Datos de producto no válidos."
        404:
          description: "Producto no encontrado."

    delete:
      summary: "Eliminar un producto por ID"
      description: "Elimina un producto específico por su ID."
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          description: "ID del producto a eliminar"
          required: true
          schema:
            type: integer
      responses:
        204:
          description: "Producto eliminado correctamente."
        404:
          description: "Producto no encontrado."

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          type: string
      required:
        - name
        - category
